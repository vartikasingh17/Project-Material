import React, { useState, useEffect } from "react";
import axios from "axios";

const Transactions = () => {
  const [transactions, setTransactions] = useState([]);
  const [view, setView] = useState("single"); // "single" or "multiple"
  const [filter, setFilter] = useState("all");
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [currentIndex, setCurrentIndex] = useState(0);

  // Fetch transactions
  useEffect(() => {
    axios
      .get("http://localhost:8080/api/transactions") // change URL if needed
      .then((res) => {
        setTransactions(Array.isArray(res.data) ? res.data : []);
        setLoading(false);
      })
      .catch((err) => {
        const msg =
          err?.response?.data?.message ||
          err?.message ||
          "Failed to load transactions.";
        setError(msg);
        setLoading(false);
      });
  }, []);

  // Apply filter
  const filteredTransactions =
    filter === "all"
      ? transactions
      : transactions.filter(
          (tx) => String(tx.status).toLowerCase() === filter.toLowerCase()
        );

  const currentTransaction =
    filteredTransactions.length > 0 ? filteredTransactions[currentIndex] : null;

  // ✅ Download current transaction as JSON
  const handleDownload = () => {
    if (!currentTransaction) return;
    const blob = new Blob([JSON.stringify(currentTransaction, null, 2)], {
      type: "application/json",
    });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = transaction_${currentTransaction.transactionId || "data"}.json;
    a.click();
    URL.revokeObjectURL(url);
  };

  // ✅ Print current transaction (browser "Save as PDF" works here)
  const handlePrint = () => {
    if (!currentTransaction) return;
    const printWindow = window.open("", "_blank", "width=800,height=600");
    if (!printWindow) return;

    printWindow.document.write(`
      <html>
        <head>
          <title>Transaction ${currentTransaction.transactionId}</title>
          <style>
            body { font-family: Arial, sans-serif; padding: 20px; }
            h2 { color: #004080; text-align: center; }
            .card {
              border: 1px solid #ccc;
              border-radius: 10px;
              padding: 20px;
              max-width: 700px;
              margin: auto;
              background: #fff;
            }
            p { margin: 6px 0; }
          </style>
        </head>
        <body>
          <h2>Transaction Details</h2>
          <div class="card">
            <p><b>Transaction ID:</b> ${currentTransaction.transactionId}</p>
            <p><b>Reference No:</b> ${currentTransaction.referenceNo}</p>
            <p><b>Company:</b> ${currentTransaction.companyName}</p>
            <p><b>Beneficiary:</b> ${currentTransaction.beneficiary}</p>
            <p><b>Amount:</b> ${currentTransaction.amount}</p>
            <p><b>Status:</b> ${currentTransaction.status}</p>
            <p><b>Payment Method:</b> ${currentTransaction.paymentMethod}</p>
            <p><b>Payee Bank:</b> ${currentTransaction.payeeBank}</p>
            <p><b>Date:</b> ${currentTransaction.valueDate}</p>
          </div>
        </body>
      </html>
    `);
    printWindow.document.close();
    printWindow.print();
  };

  if (loading) {
    return <h3 style={{ textAlign: "center" }}>Loading transactions...</h3>;
  }

  if (error) {
    return (
      <h3 style={{ textAlign: "center", color: "red" }}>
        {typeof error === "string" ? error : JSON.stringify(error)}
      </h3>
    );
  }

  return (
    <div style={{ padding: "30px", fontFamily: "Segoe UI, Arial, sans-serif" }}>
      {/* Header with buttons */}
      <div
        style={{
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          marginBottom: 20,
        }}
      >
        <h2 style={{ color: "#004080", margin: 0 }}>Transaction Preview</h2>
        <div>
          <button
            onClick={handlePrint}
            style={{
              padding: "8px 16px",
              marginRight: 10,
              border: "1px solid #ccc",
              borderRadius: 6,
              cursor: "pointer",
            }}
          >
            Print
          </button>
          <button
            onClick={handleDownload}
            style={{
              padding: "8px 16px",
              border: "1px solid green",
              borderRadius: 6,
              cursor: "pointer",
              background: "green",
              color: "#fff",
            }}
          >
            Download
          </button>
        </div>
      </div>

      {/* Transactions display */}
      {filteredTransactions.length === 0 ? (
        <h4 style={{ textAlign: "center", color: "gray" }}>
          No transactions found for filter: {filter}
        </h4>
      ) : view === "single" && currentTransaction ? (
        <div
          style={{
            border: "1px solid #ccc",
            borderRadius: 10,
            padding: 20,
            maxWidth: 700,
            margin: "auto",
            background: "#fff",
          }}
        >
          <p>
            <b>Transaction ID:</b> {currentTransaction.transactionId}
          </p>
          <p>
            <b>Reference No:</b> {currentTransaction.referenceNo}
          </p>
          <p>
            <b>Company:</b> {currentTransaction.companyName}
          </p>
          <p>
            <b>Beneficiary:</b> {currentTransaction.beneficiary}
          </p>
          <p>
            <b>Amount:</b> {currentTransaction.amount}
          </p>
          <p>
            <b>Status:</b> {currentTransaction.status}
          </p>
          <p>
            <b>Payment Method:</b> {currentTransaction.paymentMethod}
          </p>
          <p>
            <b>Payee Bank:</b> {currentTransaction.payeeBank}
          </p>
          <p>
            <b>Date:</b> {currentTransaction.valueDate}
          </p>
        </div>
      ) : (
        <div>
          {filteredTransactions.map((tx) => (
            <div
              key={tx.transactionId}
              style={{
                border: "1px solid #ccc",
                borderRadius: 10,
                padding: 15,
                marginBottom: 15,
                background: "#f9f9f9",
              }}
            >
              <p>
                <b>Transaction ID:</b> {tx.transactionId}
              </p>
              <p>
                <b>Reference No:</b> {tx.referenceNo}
              </p>
              <p>
                <b>Company:</b> {tx.companyName}
              </p>
              <p>
                <b>Amount:</b> {tx.amount}
              </p>
              <p>
                <b>Status:</b> {tx.status}
              </p>
              <p>
                <b>Date:</b> {tx.valueDate}
              </p>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default Transactions;
