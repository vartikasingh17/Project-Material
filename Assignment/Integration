import React, { useState, useEffect } from "react";
import axios from "axios";

const Transactions = () => {
  const [transactions, setTransactions] = useState([]);
  const [view, setView] = useState("single");
  const [filter, setFilter] = useState("all");
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [currentIndex, setCurrentIndex] = useState(0);

  // âœ… Fetch transactions from backend
  useEffect(() => {
    axios
      .get("http://localhost:8080/api/transactions")
      .then((response) => {
        setTransactions(response.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("Error fetching transactions:", err);
        setError("Failed to load transactions.");
        setLoading(false);
      });
  }, []);

  const filteredTransactions =
    filter === "all"
      ? transactions
      : transactions.filter((tx) => tx.status.toLowerCase() === filter);

  const currentTransaction =
    filteredTransactions.length > 0 ? filteredTransactions[currentIndex] : null;

  // âœ… Print function
  const handlePrint = () => {
    window.print();
  };

  // âœ… Download function (JSON file)
  const handleDownload = () => {
    if (!currentTransaction) return;
    const blob = new Blob([JSON.stringify(currentTransaction, null, 2)], {
      type: "application/json",
    });
    const url = URL.createObjectURL(blob);
    const link = document.createElement("a");
    link.href = url;
    link.download = transaction_${currentTransaction.transactionId}.json;
    link.click();
    URL.revokeObjectURL(url);
  };

  if (loading) {
    return <h3 style={{ textAlign: "center" }}>Loading transactions...</h3>;
  }

  if (error) {
    return <h3 style={{ textAlign: "center", color: "red" }}>{error}</h3>;
  }

  return (
    <div style={{ padding: "30px", fontFamily: "Segoe UI, Arial, sans-serif" }}>
      {/* ðŸ”¹ Header row */}
      <div
        style={{
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          marginBottom: "20px",
        }}
      >
        <h2 style={{ color: "#004080", margin: 0 }}>Transaction Preview</h2>
        <div>
          <button
            style={{
              padding: "8px 16px",
              marginRight: "10px",
              border: "1px solid #ccc",
              borderRadius: "6px",
              cursor: "pointer",
              background: "#f2f2f2",
            }}
          >
            Back
          </button>
          <button
            onClick={handlePrint}
            style={{
              padding: "8px 16px",
              marginRight: "10px",
              border: "1px solid #ccc",
              borderRadius: "6px",
              cursor: "pointer",
              background: "#f2f2f2",
            }}
          >
            Print
          </button>
          <button
            onClick={handleDownload}
            style={{
              padding: "8px 16px",
              border: "1px solid green",
              borderRadius: "6px",
              cursor: "pointer",
              background: "green",
              color: "#fff",
            }}
          >
            Download
          </button>
        </div>
      </div>

      {/* ðŸ”¹ View toggle + filter */}
      <div
        style={{
          display: "flex",
          justifyContent: "flex-start",
          alignItems: "center",
          marginBottom: "20px",
          gap: "10px",
        }}
      >
        <button
          onClick={() => setView("single")}
          style={{
            padding: "10px 20px",
            background: view === "single" ? "#0072cc" : "#fff",
            color: view === "single" ? "#fff" : "#000",
            border: "1px solid #0072cc",
            borderRadius: "6px",
            cursor: "pointer",
          }}
        >
          Single Transaction
        </button>
        <button
          onClick={() => setView("multiple")}
          style={{
            padding: "10px 20px",
            background: view === "multiple" ? "#0072cc" : "#fff",
            color: view === "multiple" ? "#fff" : "#000",
            border: "1px solid #0072cc",
            borderRadius: "6px",
            cursor: "pointer",
          }}
        >
          Multiple Transactions
        </button>
        <select
          value={filter}
          onChange={(e) => setFilter(e.target.value)}
          style={{
            padding: "10px",
            borderRadius: "6px",
            border: "1px solid #ccc",
            marginLeft: "auto",
          }}
        >
          <option value="all">All</option>
          <option value="success">Success</option>
          <option value="failed">Failed</option>
          <option value="pending">Pending</option>
        </select>
      </div>

      {/* ðŸ”¹ Main content */}
      {filteredTransactions.length === 0 ? (
        <h4 style={{ textAlign: "center", color: "gray" }}>
          No transactions found for filter: {filter}
        </h4>
      ) : view === "single" ? (
        <div
          style={{
            border: "1px solid #ccc",
            borderRadius: "10px",
            padding: "20px",
            margin: "0 auto",
            maxWidth: "750px",
            background: "#fff",
            boxShadow: "0px 2px 6px rgba(0,0,0,0.1)",
            position: "relative",
          }}
        >
          <div
            style={{
              display: "grid",
              gridTemplateColumns: "1fr 1fr",
              gap: "15px",
              fontSize: "14px",
            }}
          >
            <p>
              <b>Transaction ID:</b> {currentTransaction.transactionId}
            </p>
            <p>
              <b>Reference No:</b> {currentTransaction.referenceNo}
            </p>
            <p>
              <b>Company:</b> {currentTransaction.companyName}
            </p>
            <p>
              <b>Beneficiary:</b> {currentTransaction.beneficiary}
            </p>
            <p>
              <b>Amount:</b> ${currentTransaction.amount}
            </p>
            <p>
              <b>Status:</b> {currentTransaction.status}
            </p>
            <p>
              <b>Payment Method:</b> {currentTransaction.paymentMethod}
            </p>
            <p>
              <b>Payee Bank:</b> {currentTransaction.payeeBank}
            </p>
            <p>
              <b>Date:</b> {currentTransaction.valueDate}
            </p>
          </div>

          {/* ðŸ”¹ Prev/Next buttons */}
          <div style={{ textAlign: "right", marginTop: "20px" }}>
            <button
              onClick={() =>
                setCurrentIndex((prev) => Math.max(prev - 1, 0))
              }
              disabled={currentIndex === 0}
              style={{
                padding: "8px 16px",
                marginRight: "10px",
                border: "1px solid #ccc",
                borderRadius: "6px",
                cursor: currentIndex === 0 ? "not-allowed" : "pointer",
                background: "#f2f2f2",
              }}
            >
              Previous
            </button>
            <button
              onClick={() =>
                setCurrentIndex((prev) =>
                  Math.min(prev + 1, filteredTransactions.length - 1)
                )
              }
              disabled={currentIndex === filteredTransactions.length - 1}
              style={{
                padding: "8px 16px",
                border: "1px solid #ccc",
                borderRadius: "6px",
                cursor:
                  currentIndex === filteredTransactions.length - 1
                    ? "not-allowed"
                    : "pointer",
                background: "#f2f2f2",
              }}
            >
              Next
            </button>
          </div>
        </div>
      ) : (
        <div>
          {filteredTransactions.map((tx) => (
            <div
              key={tx.transactionId}
              style={{
                border: "1px solid #ccc",
                borderRadius: "10px",
                padding: "15px",
                marginBottom: "15px",
                background: "#f9f9f9",
                boxShadow: "0px 2px 4px rgba(0,0,0,0.1)",
              }}
            >
              <h4 style={{ color: "#004080", marginBottom: "10px" }}>
                Transaction ID: {tx.transactionId}
              </h4>
              <p>
                <b>Reference No:</b> {tx.referenceNo}
              </p>
              <p>
                <b>Company:</b> {tx.companyName}
              </p>
              <p>
                <b>Beneficiary:</b> {tx.beneficiary}
              </p>
              <p>
                <b>Amount:</b> ${tx.amount}
              </p>
              <p>
                <b>Status:</b> {tx.status}
              </p>
              <p>
                <b>Payment Method:</b> {tx.paymentMethod}
              </p>
              <p>
                <b>Payee Bank:</b> {tx.payeeBank}
              </p>
              <p>
                <b>Date:</b> {tx.valueDate}
              </p>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default Transactions;
