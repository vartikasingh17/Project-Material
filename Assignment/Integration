import React, { useState, useEffect } from "react";
import { jsPDF } from "jspdf"; // Using named import as per documentation :contentReference[oaicite:0]{index=0}

const Transactions = () => {
  const [transactions, setTransactions] = useState([]);
  const [view, setView] = useState("single");
  const [filter, setFilter] = useState("all");
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    axios
      .get("http://localhost:8080/api/transactions")
      .then((response) => {
        setTransactions(response.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("Error fetching transactions:", err);
        setError("Failed to load transactions.");
        setLoading(false);
      });
  }, []);

  const filteredTransactions =
    filter === "all"
      ? transactions
      : transactions.filter((tx) => tx.status.toLowerCase() === filter);

  const handlePrint = () => {
    window.print();
  };

  const handleDownload = (tx) => {
    const doc = new jsPDF();
    doc.setFont("helvetica", "normal");
    doc.setFontSize(14);
    doc.text("Transaction Preview", 90, 20);

    let y = 40;
    const entries = [
      ["Transaction ID:", tx.transactionId],
      ["Reference No:", tx.referenceNo],
      ["Company:", tx.companyName],
      ["Beneficiary:", tx.beneficiary],
      ["Amount:", tx.amount],
      ["Status:", tx.status],
      ["Payment Method:", tx.paymentMethod],
      ["Payee Bank:", tx.payeeBankBranch],
      ["Date:", tx.valueDate || tx.date],
    ];

    entries.forEach(([label, value]) => {
      doc.text(`${label} ${value}`, 20, y);
      y += 12;
    });

    doc.save(`Transaction_${tx.transactionId}.pdf`);
  };

  if (loading) {
    return <h3 style={{ textAlign: "center" }}>Loading transactions...</h3>;
  }
  if (error) {
    return <h3 style={{ textAlign: "center", color: "red" }}>{error}</h3>;
  }

  const txToShow = view === "single" ? filteredTransactions.slice(0, 1) : filteredTransactions;

  return (
    <div style={{ padding: 30, fontFamily: "Segoe UI, Arial, sans-serif" }}>
      <div style={{ display: "flex", justifyContent: "space-between", marginBottom: 20 }}>
        <h2 style={{ margin: 0, color: "#004080" }}>Transaction Preview</h2>
        <div>
          <button
            onClick={() => setView("multiple")}
            style={btnStyle}
          >Back</button>
          <button onClick={handlePrint} style={btnStyle}>Print</button>
          {view === "single" && txToShow.length > 0 && (
            <button onClick={() => handleDownload(txToShow[0])} style={{ ...btnStyle, background: "green", color: "#fff" }}>
              Download
            </button>
          )}
        </div>
      </div>

      <div style={{ display: "flex", justifyContent: "space-between", marginBottom: 20 }}>
        <div>
          <button onClick={() => setView("single")} style={view === "single" ? activeTab : tab}>Single Transaction</button>
          <button onClick={() => setView("multiple")} style={view === "multiple" ? activeTab : tab}>Multiple Transactions</button>
        </div>
        <div>
          <select value={filter} onChange={(e) => setFilter(e.target.value)} style={selectStyle}>
            <option value="all">All</option>
            <option value="success">Success</option>
            <option value="failed">Failed</option>
            <option value="pending">Pending</option>
          </select>
        </div>
      </div>

      {txToShow.length === 0 ? (
        <h4 style={{ textAlign: "center", color: "gray" }}>No transactions found</h4>
      ) : (
        txToShow.map((tx) => (
          <div key={tx.transactionId} style={view === "single" ? singleCard : listCard}>
            {view === "single" ? (
              <GridView tx={tx} />
            ) : (
              <>
                <h4 style={{ color: "#004080", marginBottom: 10 }}>
                  Transaction ID: {tx.transactionId}
                </h4>
                <GridView tx={tx} />
              </>
            )}
          </div>
        ))
      )}
    </div>
  );
};

// Shared Styles
const btnStyle = {
  padding: "6px 12px",
  marginRight: "8px",
  background: "#eee",
  border: "1px solid #ccc",
  borderRadius: "4px",
  cursor: "pointer",
};
const tab = { ...btnStyle, border: "1px solid #0072cc", color: "#000", background: "#fff" };
const activeTab = { ...tab, background: "#0072cc", color: "#fff" };
const selectStyle = { padding: "8px 12px", borderRadius: 6, border: "1px solid #ccc", fontSize: 14 };

const singleCard = {
  border: "1px solid #ddd",
  borderRadius: 10,
  padding: 20,
  maxWidth: 900,
  background: "#fff",
  boxShadow: "0px 2px 6px rgba(0,0,0,0.1)",
  margin: "0 auto",
};
const listCard = {
  border: "1px solid #ddd",
  borderRadius: 10,
  padding: 15,
  marginBottom: 15,
  background: "#f9f9f9",
  boxShadow: "0px 2px 4px rgba(0,0,0,0.1)",
};

const GridView = ({ tx }) => (
  <div style={{ display: "grid", gridTemplateColumns: "1fr 1fr", gap: "15px 50px" }}>
    <p><b>Transaction ID:</b> {tx.transactionId}</p>
    <p><b>Reference No:</b> {tx.referenceNo}</p>
    <p><b>Company:</b> {tx.companyName}</p>
    <p><b>Beneficiary:</b> {tx.beneficiary}</p>
    <p><b>Amount:</b> ${tx.amount}</p>
    <p><b>Status:</b> {tx.status}</p>
    <p><b>Payment Method:</b> {tx.paymentMethod}</p>
    <p><b>Payee Bank:</b> {tx.payeeBankBranch}</p>
    <p><b>Date:</b> {tx.valueDate || tx.date}</p>
  </div>
);

export default Transactions;
